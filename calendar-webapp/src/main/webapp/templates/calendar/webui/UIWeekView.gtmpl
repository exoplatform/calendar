<%
  import java.util.Calendar;
  import java.lang.Math ;
  import java.util.GregorianCalendar;
  import java.text.DateFormat;
  import java.text.SimpleDateFormat;
  import org.exoplatform.calendar.CalendarUtils;
  import java.util.Locale;
  import org.exoplatform.webui.application.WebuiRequestContext;
  import org.exoplatform.calendar.service.CalendarEvent;
  import java.text.ParseException;
  uiform.begin()
 
   Calendar currentCalendar = uicomponent.getCurrentCalendar() ;
   int currentDay = uicomponent.getCurrentDay() ;
  int currentMonth = uicomponent.getCurrentMonth() ;
   int currentYear = uicomponent.getCurrentYear() ;
  timeInterval = uicomponent.getTimeInterval() ;
   def rcontext = _ctx.getRequestContext() ;
  numberOfDays = 7 ;
  styleWidth = "width:13.8%;*width:14%;" ;
  if(uicomponent.isShowCustomView()) {
    numberOfDays = 5 ;
    styleWidth = "width:19.8%;*width:20%;" ;
  } 
  workingStart = uicomponent.getCalendarSetting().getWorkingTimeBegin() ;
  int defaultTimeInterval = uicomponent.getDefaultTimeInterval() ;
  
  def requirejs = rcontext.getJavascriptManager().getRequireJS();
  requirejs.require("PORTLET/calendar/CalendarPortlet","cal");
  
  requirejs.addScripts('cal.UICalendarPortlet.getWorkingdays('+numberOfDays+') ;') ;
  
  //rcontext.getJavascriptManager().addOnLoadJavascript("eXo.calendar.UICalendarPortlet.onLoad") ; //error in addOnLoadJavascript
  requirejs.require("SHARED/base","base");
  id = Integer.toString(Math.abs(new String("cal.UICalendarPortlet.onLoad").hashCode()));  
  requirejs.addScripts("base.Browser.addOnLoadCallback('mid"+id+"',cal.UICalendarPortlet.onLoad);") ;
  
  rcontext.getJavascriptManager().addCustomizedOnLoadScript('cal.UICalendarPortlet.checkFilter') ;
  rcontext.getJavascriptManager().addOnResizeJavascript('cal.UIWeekView.onResize') ;
  requirejs.addScripts('cal.UICalendarPortlet.currentDate = ' + uicomponent.getDefaultStartTimeOfEvent() +';') ;
  rcontext.getJavascriptManager().addCustomizedOnLoadScript('cal.CalendarLayout.updateUICalendarViewLayout(\'UIWeekView\');');
   WebuiRequestContext context = WebuiRequestContext.getCurrentInstance() ;
   Locale locale = context.getParentAppRequestContext().getLocale() ;
   String currentMonthName = uicomponent.getMonthName(currentMonth) ;
   dateFormat = uicomponent.getDateFormat() ;
  timeFormat = uicomponent.getTimeFormat() ;
  dateTimeFormat = uicomponent.getDateTimeFormat() ;
  String startWorkingTime = uicomponent.getStartTime() ;
  String endWorkingTime = uicomponent.getEndTime() ;
  Calendar startDateOfWeek = uicomponent.getBeginDateOfWeek();
  Calendar endDateOfWeek = uicomponent.getEndDateOfWeek();
  String startDayViewAction = uicomponent.TYPE_DAY +"&currentTime="+ startDateOfWeek.getTimeInMillis();
  String startMonthViewAction = uicomponent.TYPE_MONTH +"&currentTime="+ startDateOfWeek.getTimeInMillis();
  String startYearViewAction = uicomponent.TYPE_YEAR +"&currentTime="+ startDateOfWeek.getTimeInMillis();
  String endDayViewAction = uicomponent.TYPE_DAY +"&currentTime="+ endDateOfWeek.getTimeInMillis();
  String endMonthViewAction = uicomponent.TYPE_MONTH +"&currentTime="+ endDateOfWeek.getTimeInMillis();
  String endYearViewAction = uicomponent.TYPE_YEAR +"&currentTime="+ endDateOfWeek.getTimeInMillis();
  boolean isShowWorkingTime = uicomponent.isShowWorkingTime() ;
  DateFormat df = new SimpleDateFormat(dateFormat, locale) ;
  DateFormat tf = new SimpleDateFormat(timeFormat, locale) ;
  tf.setCalendar(CalendarUtils.getInstanceTempCalendar()) ;
  DateFormat dtf = new SimpleDateFormat(dateFormat+" "+CalendarUtils.TIMEFORMAT, locale) ;
  DateFormat wf = new  SimpleDateFormat("EEE, dd MMM", locale) ;
  DateFormat tempFormat =  new  SimpleDateFormat("EEE MMM dd yyyy HH:mm:ss", Locale.ENGLISH) ;
  tempFormat.setCalendar(CalendarUtils.getInstanceTempCalendar()) ;  
  def eventList = [];
%>
<div class="UIWeekView">
 <%_ctx.include("app:/templates/calendar/webui/UIHeaderBar.gtmpl");%>
  <div class="EventWeekContainer">
    <div class="EventWeekBar">
      <table class="UIGrid"  cellspacing="0" cellpadding="0" exocallback="eXo.calendar.UIWeekView.callbackSelectionX();">
          <tr>
            <td style="width: 55px;" class="UIEmtyBlock"><div style="width: 55px;"><span></span></div></td>
            <%
              cl = uicomponent.getBeginDateOfWeek() ;
              t = 0 ; 
              while(t++ <numberOfDays) {
                cssClass = "Day" ;
                if(uicomponent.isCurrentDay(cl.get(Calendar.DATE), cl.get(Calendar.MONTH), cl.get(Calendar.YEAR))) {
                  cssClass = "Today" ;
                }
                dayActionLink = uicomponent.TYPE_DAY +"&currentTime="+ cl.getTimeInMillis() ;
                actionLink =  uicomponent.event("GotoDate",dayActionLink) ;
                styleCss = "" ;
                if(cl.get(Calendar.DAY_OF_WEEK) == Calendar.SUNDAY){
                   styleCss = "" ;
                }
                 wf.setCalendar(cl) ;
            %>
            <td class="$cssClass UICellBlock" style="$styleWidth" startTime="<%=cl.getTimeInMillis()%>"  startTimeFull="<%=tempFormat.format(cl.getTime())%>">
              <a href="$actionLink" style="$styleCss">
                <%=wf.format(cl.getTime())%>
              </a>
            </td>
            <%
              cl.add(Calendar.DATE,1) ;
             }
            %>
          </tr>
      </table>
    
    <div id="UIWeekViewGridAllDay" class="EventAllday" style="" numberOfDays="$numberOfDays">
      <div class="Space"><span></span></div>
      <div style="margin-left: 55px;">
        <div class="EventAlldayBoard">
                  <% for (event in uicomponent.allDayEvent) {
                    begindate =  event.getFromDateTime().getTime() ;  
                    enddate = event.getToDateTime().getTime() ; 
                    leftClass = "LeftResizeEvent ResizableSign" ;
                    if(event.fromDateTime.before(uicomponent.getBeginDateOfWeek().getTime())){
                      leftClass = "LeftContinueEvent" ;
                    }  
                    rightClass = "RightResizeEvent ResizableSign" ;
                    if(event.toDateTime.after(uicomponent.getEndDateOfWeek().getTime())){
                      rightClass = "RightContinueEvent" ;
                    }      
                    long   startTime = event.getFromDateTime().getTime() ;  
                    long  finishTime = event.getToDateTime().getTime() ;  
                    color = uicomponent.getColors().get(event.calType +CalendarUtils.COLON+ event.getCalendarId()) ;
                    title = tf.format(event.getFromDateTime()) + "->" + tf.format(event.getToDateTime())+ ":&#013; " + event.summary ;
                    actionLink =  uicomponent.event("UpdateAllDayEvent",event.getId());
                    Boolean isOccur = (event.getRepeatType() != null && !CalendarEvent.RP_NOREPEAT.equals(event.getRepeatType()) && (event.getIsExceptionOccurrence() == null || !event.getIsExceptionOccurrence()));
                    String recurId = event.getRecurrenceId();
                  %>
                  <div class="EventContainer EventAlldayContainer WeekViewEventBoxes $color" eventcat="$event.eventCategoryId" style="position:absolute; border: solid 1px grey;" caltype="$event.calType" eventid="$event.id" isOccur="$isOccur" recurId="$recurId" calid="$event.calendarId" startTime="$begindate"  endTime="$enddate" 
                  startTimeFull="<%=tempFormat.format(event.getFromDateTime())%>" endTimeFull="<%=tempFormat.format(event.getToDateTime())%>"
                    actionlink="$actionLink">
                  <%
                  if (!eventList.contains(event.id)) {
                    eventList.add(event.id);
                  %>
                  <input type="hidden" name="${event.id}calType" value="$event.calType" />
                  <input type="hidden" name="${event.id}calendarId" value="$event.calendarId" />          
                  <input type="hidden" name="${event.id}startTime" value="" />
                  <input type="hidden" name="${event.id}finishTime" value="" />
                  <input type="hidden" name="${event.id}isOccur" value="$isOccur" />
                  <input type="hidden" name="${event.id}recurId" value="$recurId" />
                  <input type="hidden" name="${event.id}currentDate" value="" />
                  <%
                  }
                  %>
                    <div class="$leftClass">
                      <span></span>
                    </div>
                    <div class="EventAlldayContent">
                      <%=event.summary%>
                    </div>
                    <div class="$rightClass">
                      <span></span>
                    </div>
                  </div>
                  <%}%>
              </div>
       </div>

    </div>
    
    </div>
    <div class="EventWeekContent MainWorkingPanel" style="position: relative;" onresize="eXo.calendar.UIWeekView.onResize() ;">
      <div class="EventBoard">
        <%
        cl = uicomponent.getBeginDateOfWeek() ;        
        t = 0 ; 
        while(t++ < numberOfDays) {
          day = cl.get(Calendar.DATE) ;
           month = cl.get(Calendar.MONTH) ;
           year = cl.get(Calendar.YEAR) ;
           key = uicomponent.keyGen(day, month, year) ;
           dayOfWeek = cl.get(Calendar.DAY_OF_WEEK) ;
          events = uicomponent.getEventData().get(key) ; 
          if(events != null) {
          for(event in events){ 
            begin =  tf.format(event.fromDateTime) ;
            begindate = dtf.format(event.fromDateTime) ;
            end = tf.format(event.toDateTime) ; 
            cal = CalendarUtils.getInstanceTempCalendar() ;
             cal.setTime(event.getFromDateTime()) ;
            beginTime = cal.get(Calendar.HOUR_OF_DAY)*60 + cal.get(Calendar.MINUTE) ;
            cal.setTime(event.getToDateTime()) ;
            endTime = cal.get(Calendar.HOUR_OF_DAY)*60 + cal.get(Calendar.MINUTE) ;
            color = uicomponent.getColors().get(event.calType +CalendarUtils.COLON+ event.getCalendarId()) ;
            //actionLink =  uicomponent.event("UpdateEvent",event.getId()+"&calendarId="+event.getCalendarId()+"&startTime=beginTime&finishTime=endTime") ;
            actionLink =  uicomponent.event("UpdateEvent",event.id) ;
            Boolean isOccur = (event.getRepeatType() != null && !CalendarEvent.RP_NOREPEAT.equals(event.getRepeatType()) && (event.getIsExceptionOccurrence() == null || !event.getIsExceptionOccurrence()));
            String recurId = event.getRecurrenceId();
        %>
        <div class="EventContainerBorder WeekViewEventBoxes $color" eventindex="$dayOfWeek"
          style="position: absolute;" eventcat="$event.eventCategoryId" caltype="$event.calType"
          eventid="$event.id" calid="$event.calendarId" actionlink="$actionLink" unselectable="on"
          startTime="$beginTime" endTime="$endTime" isOccur="$isOccur" recurId="$recurId">
          <%
            if (!eventList.contains(event.id)) {
              eventList.add(event.id);
          %>
          <input type="hidden" name="${event.id}calType" value="$event.calType" />
          <input type="hidden" name="${event.id}calendarId" value="$event.calendarId" />          
          <input type="hidden" name="${event.id}startTime" value="" />
          <input type="hidden" name="${event.id}finishTime" value="" />
          <input type="hidden" name="${event.id}isOccur" value="$isOccur" />
          <input type="hidden" name="${event.id}recurId" value="$recurId" />
          <input type="hidden" name="${event.id}currentDate" value="" />
          <%
            }
          %>
		  <div class="ClearFix">
			   <div class="<%=event.eventState%>Icon">
				 <div class="<%=event.getPriority()%>PriorityIcon">
					<span></span>
				  </div>
				</div>
			  <div class="EventContainerBar EventTitle" title="<%=uiform.getLabel('moveEvent')%>" >
				<p unselectable="on">
				  $begin - $end
				</p>
			  </div>
		  </div>
          <div unselectable="on" class="EventContainer">$event.summary</div>
          <div class="ResizeEventContainer" unselectable="on">
            <span></span>
          </div>
        </div>
        <% }
              }
          cl.add(Calendar.DATE, 1) ;
          }
        %>
      </div>
      <table class="UIGrid" style="table-layout: fixed;" id="UIWeekViewGrid" lastupdatedid="<%=uicomponent.getLastUpdatedEventId()%>" cellspacing="0" cellpadding="0">
        <tbody>
          <% 
          boolean flag = false ;
          style = "none" ;
          if(isShowWorkingTime) {style = "WorkOffTime" ;}  
          
          String tempTimeFormat = CalendarUtils.TIMEFORMATPATTERNS[0] ;
          if (timeFormat.startsWith("HH")) tempTimeFormat = CalendarUtils.TIMEFORMATPATTERNS[1] ;
          def counter = 0 ;
		  def timeName = "Gray";
          for(full in uicomponent.getDisplayTimes(tempTimeFormat, timeInterval, Locale.ENGLISH)){
			if((counter % 4) == 0 || (counter % 4) == 1) {
			 timeName = "OddRow";
			} else if((counter % 4) == 2 || (counter % 4) == 3) {
			 timeName = "EvenRow";
			}
			String time = full.substring(0,full.lastIndexOf("_")) ;
			String display = full.substring(full.lastIndexOf("_")+1) ;
				if(isShowWorkingTime) {
				if(time.equals(startWorkingTime)) {style = "" ;}
				if(time.equals(endWorkingTime)) {style = "WorkOffTime" ;}
				}
				if(flag) {styleClass = "TdDotLine" ;}
				else {styleClass = "TdLine";}
          %>
          <tr class="$style $timeName">
            <td class="TdTime">
              <div class="TdTime">
                <%if(!flag) {println display;} else {println "&nbsp;";} %>
              </div>
            </td>
            <%
               cl = uicomponent.getBeginDateOfWeek() ;
               DateFormat dayFormat = new SimpleDateFormat(dateFormat, Locale.ENGLISH) ;
              DateFormat fullDateFormat = new SimpleDateFormat(dateFormat+" "+CalendarUtils.TIMEFORMAT, Locale.ENGLISH) ;
              dayFormat.setCalendar(cl);
              fullDateFormat.setCalendar(cl);
                       
              t = 0 ; 
              while(t++ < numberOfDays) {
                //df.setCalendar(cl) ;
                 startTime = dayFormat.format(cl.getTime()) + " " + time;
                 //dtf.setCalendar(cl) ;
                 fullDateFormat.setLenient(false);
                 // add try-catch block to handle Daylight Saving Time problem 
                 try {
                   cl.setTime(fullDateFormat.parse(startTime)) ;
                 } catch (ParseException e) {
                   fullDateFormat.setLenient(true);
                   cl.setTime(fullDateFormat.parse(startTime));   
                 }
                 dayOfWeek = cl.get(Calendar.DAY_OF_WEEK) ;
                 if(uicomponent.isCurrentDay(cl.get(Calendar.DATE), cl.get(Calendar.MONTH), cl.get(Calendar.YEAR))) {
                  cssClass = "Today" ;
                }else if(dayOfWeek == 1 || dayOfWeek == 7){
                   cssClass = "Weekend" ;
                 } else {
                   cssClass = "Weekday" ;
                 }
            %>
            <td startFull="<%=tempFormat.format(cl.getTime())%>" startTime="<%=cl.getTimeInMillis()%>" eventindex="$dayOfWeek" class="$styleClass $cssClass $style" style="$styleWidth">
              <span></span>
            </td>
            <%    
                 cl.add(Calendar.DATE, 1) ;
               }
             flag = ! flag ;
             %>
          </tr>
             <%
			 counter ++;
           }
            %>
        </tbody>
      </table>
    </div>
  </div>
</div>
<%uiform.end();%>
<% /*Begin Popup Menu*/ %>
<div class="UIRightClickPopupMenu" id="UIWeekViewRightMenu" exocallback="eXo.calendar.UICalendarPortlet.weekViewCallback">
  <div class="UIContextMenuContainer">
    <div class="TopLeftRightClickPopupMenu">
      <div class="TopRightRightClickPopupMenu">
        <div class="TopCenterRightClickPopupMenu">
          <span></span>
        </div>
      </div>
    </div>
    <div class="MiddleLeftRightClickPopupMenu">
      <div class="MiddleRightRightClickPopupMenu">
        <div class="UIRightPopupMenuContainer">
          <%
                    for(String act : uicomponent.getQuickEditMenu()) {
                    link = uicomponent.event(act,uicomponent.id,"id&$uicomponent.CALENDARID=calId&calType=caltype&isOccur=isOccur&recurId=recurId") ;
                    icon = act + "EventIcon" ;
          %>
          <div style="display: none;" class="EventActionMenu MenuItem">
            <a class="ItemIcon $icon" href="$link">
              <%=_ctx.appRes("ContextMenu.label."+act)%>
            </a>
          </div>
          <%}%>
          <div class="MenuItem EventActionMenu" style="display: none;">
            <a class="ItemIcon ExportCalendarIcon" href="<%=uicomponent.event("ExportEvent","id&$uicomponent.CALENDARID=calId&$uicomponent.CALTYPE=caltype")%>">
              <%=_ctx.appRes("ContextMenu.label.ExportEvent")%>
            </a>
          </div>
          <div class="MenuItem"  >
            <a class="ItemIcon QuickAddEvent" href="#">
              <%=_ctx.appRes("ContextMenu.label.addEvent")%>
            </a>
          </div>
      <div class="MenuItem">
            <a class="ItemIcon QuickAddTask" href="#">
              <%=_ctx.appRes("ContextMenu.label.addTask")%>
            </a>
          </div>
        </div>
      </div>
    </div>
    <div class="BottomLeftRightClickPopupMenu">
      <div class="BottomRightRightClickPopupMenu">
        <div class="BottomCenterRightClickPopupMenu">
          <span></span>
        </div>
      </div>
    </div>
  </div>
</div>
<% /*End Popup Menu*/ %>
