<%
  import org.exoplatform.calendar.service.GroupCalendarData;
  import org.exoplatform.calendar.service.CalendarEvent;
  import org.exoplatform.calendar.CalendarUtils;
  import org.exoplatform.calendar.service.Utils;
  import org.exoplatform.webui.form.input.UICheckBoxInput;
  import org.exoplatform.calendar.webui.UICalendarPortlet;
  import org.exoplatform.calendar.webui.UIActionBar;
  import org.exoplatform.calendar.webui.popup.UISharedForm;

  def rcontext = _ctx.getRequestContext() ;
  def requirejs = rcontext.getJavascriptManager().getRequireJS();
  requirejs.require("PORTLET/calendar/CalendarPortlet","cal");
  requirejs.addScripts("cal.UICalendarPortlet.loadTitle();");
  requirejs.require("SHARED/jquery","gj");
  requirejs.addScripts('cal.UICalendars.init("' + uiform.id + '") ;') ;
  requirejs.addScripts("gj('div#UICalendars_calendarActions').click(function(event) {cal.UICalendars.showMenu(this, event, 'CalendarMainPopupMenu'); });");
  requirejs.addScripts("gj('div#UICalendars_CalendarPopupMenu1').click(function(event) {cal.UICalendars.showMenu(this, event, 'CalendarPopupMenu', cal.UICalendars.calendarMenuCallback); });");
  requirejs.addScripts("gj('div#UICalendars_CalendarPopupMenu2').click(function(event) {cal.UICalendars.showMenu(this, event, 'CalendarPopupMenu', cal.UICalendars.calendarMenuCallback); });");
  requirejs.addScripts("gj('div#UICalendars_CalendarPopupMenu3').click(function(event) {cal.UICalendars.showMenu(this, event, 'CalendarPopupMenu', cal.UICalendars.calendarMenuCallback); });");
  requirejs.addScripts("gj('div#UICalendars_toggle-calendars').click(function() {cal.UICalendarPortlet.switchLayout(3);});");
  //rcontext.getJavascriptManager().addJavascript('eXo.calendar.UICalendarPortlet.checkFilter() ;') ;


  private void renderNoCalendarNote()
  {
	  def addNewLink ;
	  def addNewMessage ;
	  def addNewLabel ;

	  /* link to add new calendar */
	  if (!uicomponent.hasFilteredCalendar())
	  {
		  addNewLink    = uicomponent.event('AddCalendar','id');
		  addNewMessage = _ctx.appRes("UICalendarSettingForm.msg.no-calendar");
		  addNewLabel   = _ctx.appRes("UICalendars.msg.add-new-calendar");
	  }
	  /* link to open setting */
	  else if (uicomponent.hasFilteredCalendar())
	  {
		  UIActionBar uiActionBar = uicomponent.getUIActionBar() ;
		  addNewLink    = uiActionBar.event('Setting') ;
		  addNewMessage = _ctx.appRes("UICalendars.msg.no-shown-calendar") ;
		  addNewLabel   = _ctx.appRes("UICalendars.msg.show-calendar") ;
	  }
	  %>
	  <div class="alert">
	    <i class="uiIconWarning "></i> $addNewMessage
      <a href="$addNewLink" style="float: none; color: #2f5e92; display: block; margin-left: 20%;">$addNewLabel</a>
	  </div>
    <%
  }

  private void renderPrivateCalendarGroup()
  {
      List calendars = uicomponent.getAllPrivateCalendars();
	  if (calendars.size() == 0) return ;
	  def privateCalendarTitle = _ctx.appRes("UICalendarSettingForm.label.privateCalendar");
	  UICalendarPortlet uiCalendarPortlet = uicomponent.getAncestorOfType(UICalendarPortlet.class);
      def isInSpaceContext = uiCalendarPortlet.isInSpaceContext();

	  %>
	  <div class="myCalendar">
	    <h6 class="calendarTitle">$privateCalendarTitle</h6>
	    <div class="myCalendarContainer">
	      <ul class="uiVTabContent" >
	      <%
	        for (calendar in calendars)
	        {
		        if (uicomponent.getChildById(calendar.getId()) == null) continue;
                def calendarId   = calendar.id ;
		        def calendarName = calendar.name;
		        def color        = calendar.calendarColor ;
		        def icon         = "CalendarIcon" ;
		        def isRemote     = uicomponent.isRemoteCalendar(calendarId) ;
		        def css          = "iconCheckBox checkbox" ;
		        UICheckBoxInput chk = (UICheckBoxInput) uicomponent.getChildById(calendarId) ;

		        if (calendar.getViewPermission()!= null && calendar.getViewPermission().length > 0) icon = "SharedCalendarIcon";
		        if (isInSpaceContext && !uicomponent.isCalendarOfSpace1(calendar.getGroups())) css = "IconUnCheckBox checkbox";
		        if(chk.isChecked()) css = "iconCheckBox checkbox";
		    %>
		        <li class="calendarItem  CalendarItemPrivate" calColor="$color" canEdit="true" id="$calendarId" calType="0" isRemote="$isRemote">
		        <div id="UICalendars_CalendarPopupMenu1" class="uiIconCalSettingMini uiIconLightGray pull-right"></div>
              <div class="calendarCheckboxBlock clearfix" calId="$calendarId">
                <a href="javascript:void(0);" class="$color">
                  <span class="colorOpacity">
                    <span class="$css"></span>
		              </span>
                </a>
		            <a class="calendarName" href="javascript:void(0);" rel="tooltip" data-placement="bottom" title="$calendarName">$calendarName</a>
                <span style="display:none"><%uiform.renderField(calendarId)%></span>
		          </div>
            </li>
		      <% } %>
	      </ul>
      </div>
	  </div>
  <%
  }

  private void renderSharedCalendarGroup()
  {
    GroupCalendarData sharedCalendars = uicomponent.getSharedCalendars() ;
    List calendarList = sharedCalendars.getCalendars() ;
    if (calendarList.size() == 0) return;

    def sharedCalendarTitle = _ctx.appRes("UICalendarSettingForm.label.sharedCalendar");
    def user = CalendarUtils.getCurrentUser();
    UICalendarPortlet uiCalendarPortlet = uicomponent.getAncestorOfType(UICalendarPortlet.class);
    def isInSpaceContext = uiCalendarPortlet.isInSpaceContext();
    String[] checkPerms = uicomponent.getCheckPermissionString().split(CalendarUtils.COMMA);

    %>
    <div class="myCalendar">
      <h6 class="calendarTitle">$sharedCalendarTitle</h6>
	    <div class="myCalendarContainer">
	      <ul class="uiVTabContent">
	      <%
	        for (calendar in calendarList)
	        {
		        if (uicomponent.getChildById(calendar.getId()) == null) continue
                def calendarId   = calendar.id ;
		        def calendarName = calendar.name ;
		        def color        = uicomponent.getColorMap().get("1" + ":" + calendarId) ;
		        //def isEditable   = uicomponent.canEdit(Utils.getEditPerUsers(calendar), checkPerms);
		        def isEditable   = UISharedForm.canUserEditCalendar(user, calendar);
		        def css          = "iconCheckBox checkbox";
		        UICheckBoxInput chk = (UICheckBoxInput) uicomponent.getChildById(calendarId);

		        if (isInSpaceContext && !uicomponent.isCalendarOfSpace1(calendar.getGroups())) css = "IconUnCheckBox checkbox";
		        if (chk.isChecked()) css = "iconCheckBox checkbox";
		      %>
		      <li class="calendarItem CalendarItemShared" calColor="$color" id="$calendarId" calType="1" canEdit="$isEditable">
		        <div id="UICalendars_CalendarPopupMenu2" class="uiIconCalSettingMini uiIconLightGray pull-right"></div>
            <div class="calendarCheckboxBlock clearfix" calId="$calendarId">
              <a href="javascript:void(0);" class="$color">
                <span class="colorOpacity">
                  <span class="$css"></span>
		            </span>
              </a>
		          <a class="calendarName" href="javascript:void(0);" rel="tooltip" data-placement="bottom" title="$calendarName">$calendarName</a>
              <span style="display:none;"><%uiform.renderField(calendarId)%></span>
		        </div>
          </li>
		      <% } %>
	      </ul>
      </div>
	  </div>
  <%
  }

  private void renderPublicCalendarGroup()
  {
    List calendarList = uicomponent.getAllPublicCalendars() ;
    if (calendarList.size() == 0) return;
    def publicCalendarTitle = _ctx.appRes("UICalendarSettingForm.label.publicCalendar");
    String[] checkPerms = uicomponent.getCheckPermissionString().split(CalendarUtils.COMMA);

    UICalendarPortlet uiCalendarPortlet = uicomponent.getAncestorOfType(UICalendarPortlet.class);
    def isInSpaceContext = uiCalendarPortlet.isInSpaceContext();

    %>
    <div class="myCalendar">
      <h6 class="calendarTitle">$publicCalendarTitle</h6>
	      <div class="myCalendarContainer">
	      <ul class="uiVTabContent">
	      <%
	        for (calendar in calendarList)
	        {
		        if (uicomponent.getChildById(calendar.getId()) == null) continue
                def calendarId   = calendar.id ;
		        def calendarName = calendar.name;
		        def css          = "iconCheckBox checkbox" ;
		        def color        = calendar.calendarColor ;
		        def isEditable   = uicomponent.canEdit(calendar.getEditPermission(), checkPerms) ;
		        UICheckBoxInput chk = (UICheckBoxInput) uicomponent.getChildById(calendarId) ;

		        StringBuffer groupList = new StringBuffer();
		        for (String groupId: calendar.getGroups())
		        {
			        groupList.append(groupId + ", ")
		        }
		        groupList.deleteCharAt(groupList.lastIndexOf(","));

		        if (isInSpaceContext && !uicomponent.isCalendarOfSpace1(calendar.getGroups())) css = "IconUnCheckBox checkbox";
		        if (chk.isChecked()) css = "iconCheckBox checkbox";
		      %>
		      <li class="calendarItem calendarItemPublic "  calColor="$color" canEdit="$isEditable" id="$calendarId" calType="2" >
		        <div id="UICalendars_CalendarPopupMenu3" class="uiIconCalSettingMini uiIconLightGray pull-right" ></div>
            <div class="calendarCheckboxBlock clearfix" calId="$calendarId">
              <a href="javascript:void(0);" class="$color">
                <span class="colorOpacity">
                  <span class="$css"></span>
		            </span>
              </a>
		          <a class="calendarName" href="javascript:void(0);" rel="tooltip" data-placement="bottom" title="$groupList">$calendarName</a>
              <span style="display:none"><%uiform.renderField(calendarId)%></span>
		        </div>
          </li>
		      <% } %>
	      </ul>
      </div>
	  </div>
  <%
  }

%>
<%uiform.begin()%>
<div class="uiBox uiCalendars">
  <h5 class="title">
    <div id="UICalendars_calendarActions" class="pull-right">
      <div class="actionIconSmall " rel="tooltip" data-placement="bottom" title="<%=uiform.getLabel("calendarActions")%>">
        <i class="uiIconCalSimplePlus uiIconLightGray"></i>
		  </div>
    </div>
	  <%=uiform.getLabel("calendars")%>
	</h5>

  <div class="contentContainer">
    <% renderPrivateCalendarGroup(); %>

    <% renderSharedCalendarGroup(); %>

    <% renderPublicCalendarGroup(); %>

    <% if (uicomponent.hasNoCalendarShown()) renderNoCalendarNote(); %>
  </div>

	<% /*Begin Popup Menu - Calendar Actions */ %>

	<div class="uiRightClickPopupMenu CalendarMainPopupMenu dropdown-menu uiDropdownWithIcon" style="display: none ;">
	  <span class="arrowLeft" style="top: 29%"></span>
	  <ul class="uiDropDownCal" style="display:block;">
	    <li>
	      <a href="<%=uicomponent.event('AddCalendar','id')%>">
	        <i class="uiIconCalAddCalendar uiIconLightGray"></i>
          <%=uiform.getLabel("AddCalendar")%>
        </a>
	    </li>
      <li>
        <a href="<%=uicomponent.event("RemoteCalendar")%>">
          <i class="uiIconCalRemoteCalendar uiIconLightGray"></i>
	        <%=uiform.getLabel("RemoteCalendar")%>
	      </a>
      </li>
	    <li>
	      <a href="<%=uicomponent.event("AddEventCategory")%>">
	        <i class="uiIconCalCreateEvent uiIconLightGray"></i>
          <%=uiform.getLabel("AddEventCategory")%>
        </a>
	    </li>
      <li>
        <a href="<%=uicomponent.event("ImportCalendar")%>">
          <i class="uiIconCalImportCalendar uiIconLightGray"></i>
	        <%=uiform.getLabel("ImportCalendar")%>
	      </a>
      </li>
	    <li>
	      <a href="<%=uicomponent.event("CalendarSetting")%>">
	        <i class="uiIconSetting uiIconLightGray"></i>
          <%=uiform.getLabel("CalendarSetting")%>
        </a>
	    </li>
    </ul>
	</div>

	<% /*End Popup Menu*/ %>

  <% /*Begin Popup Menu - Calendar Menu*/ %>

	<div class="uiRightClickPopupMenu CalendarPopupMenu dropdown-menu uiDropdownWithIcon" style="display: none;" id="CalendarPopupMenu" eXoCallback="eXo.calendar.UICalendarPortlet.calendarMenuCallback">
			<span class="arrowLeft"></span>
			<ul class="uiDropDownCal" style="display:block;">
				<li>
					<a id="AddEvent" href="javascript:eXo.calendar.UICalendarPortlet.addQuickShowHiddenWithId(this, 1, 'objectId=id');">
					  <i class="uiIconCalCreateEvent uiIconLightGray"></i>
					  <%=uiform.getLabel("AddEvent")%>
					</a>
				</li>
				<li>
					<a id="AddTask" href="javascript:eXo.calendar.UICalendarPortlet.addQuickShowHiddenWithId(this, 2, 'objectId=id');">
					  <i class="uiIconCalCreateTask uiIconLightGray"></i>
					  <%=uiform.getLabel("AddTask")%>
					</a>
				</li>
				<li>
					<a href="<%=uicomponent.event("EditCalendar","id")%>">
					  <i class="uiIconEdit uiIconLightGray"></i>
					  <%=uiform.getLabel("EditCalendar")%>
					</a>
				</li>
				<li>
				  <a href="<%=uicomponent.event("ShareCalendar","id")%>">
            <i class="uiIconCalShare uiIconLightGray"></i>
            <%=uiform.getLabel("ShareCalendar")%>
          </a>
        </li>
         <li>
					<a href="<%=uicomponent.event("RemoveSharedCalendar",uicomponent.id,"id")%>">
					  <i class="uiIconDelete uiIconLightGray"></i>
					  <%=uiform.getLabel("RemoveSharedCalendar")%>
					</a>
				</li>
				<li>
					<a href="<%=uicomponent.event("RemoveCalendar",uicomponent.id,"id")%>">
					  <i class="uiIconDelete uiIconLightGray"></i>
					  <%=uiform.getLabel("RemoveCalendar")%>
					</a>
				</li>
				<li>
					<a href="<%=uicomponent.event('ImportCalendar','id')%>">
					  <i class="uiIconCalImportCalendar uiIconLightGray"></i>
					  <%=uiform.getLabel("ImportCalendar")%>
					</a>
				</li>
				<li>
					<a href="<%=uicomponent.event("ExportCalendar","id")%>">
					  <i class="uiIconCalExportCalendar uiIconLightGray"></i>
					  <%=uiform.getLabel("ExportCalendar")%>
					</a>
				</li>
				<li>
					<a href="<%=uicomponent.event("RefreshRemoteCalendar","id")%>">
					  <i class="uiIconRefresh uiIconLightGray"></i>
					  <%=uiform.getLabel("RefreshRemoteCalendar")%>
					</a>
				</li>
				<li class="lineSplit"></li>
				<li class="calendarTableColor">
					<%
					  int i = 0 ;
					  int index = 0 ;
					  int items = 5 ;
					  int size = uicomponent.getColors().size() ;
					  int rows = size/items ;
					  int count = 0 ;
					  while(i <= rows)  {
						print "<div>" ;
						j = 0 ;
						while(j <= items && count < size){
						 color = uicomponent.getColors()[count] ;
						 actionLink = uicomponent.event('ChangeColor','id&calColor='+color);
						 print "<a href=\"$actionLink\" class=\"$color colorCell\"><i class=\"iconCheckBox\"></i></a>" ;
						 count++
						 j++;
						}
						print "</div>" ;
						i++ ;
					  }
					%>
				</li>
			</ul>
	</div>
  <% /*End Popup Menu*/ %>
    
  <% /*Arrow for menu*/ %>
  
  <span class="uiArrowCalDropdown"></span>
	</div>
<%uiform.end()%>
