  <%
  import java.text.DateFormatSymbols;
  import java.text.DateFormat;
  import java.text.SimpleDateFormat;
  import java.util.Calendar;
  import java.util.Date;
  import java.util.GregorianCalendar;
  import java.util.Locale;
  import org.exoplatform.calendar.CalendarUtils;
  import org.exoplatform.webui.application.WebuiRequestContext;
  import org.exoplatform.calendar.service.CalendarEvent;
  import org.apache.commons.lang.StringEscapeUtils;

  uiform.begin() ;
  
  def rcontext = _ctx.getRequestContext() ;
  def requireJS = rcontext.getJavascriptManager().getRequireJS();
  
  requireJS.require("PORTLET/calendar/CalendarPortlet","cal");
  requireJS.require("SHARED/GUIMan","GUIMan");
  requireJS.require("SHARED/UICalendarMan","UICalendarMan");
  def onloadId = Integer.toString(Math.abs(new String("cal.UICalendarPortlet.onLoad").hashCode()));
  requireJS.addScripts("base.Browser.addOnLoadCallback('mid"+onloadId+"',cal.UICalendarPortlet.onLoad);") ;
  rcontext.getJavascriptManager().addCustomizedOnLoadScript('cal.UICalendarPortlet.checkFilter') ;
  requireJS.addScripts('cal.UICalendarPortlet.currentDate = ' + uicomponent.getDefaultStartTimeOfEvent() +';') ;
  rcontext.getJavascriptManager().addCustomizedOnLoadScript('cal.CalendarLayout.updateUICalendarViewLayout(\'UIMonthView\');');
  requireJS.require("SHARED/jquery","gj");
  rcontext.getJavascriptManager().addOnResizeJavascript('function(){UICalendarMan.initMonth();}') ;
  
  int currentDay = uicomponent.getCurrentDay() ;
  int currentMonth = uicomponent.getCurrentMonth() ;
  String currentMonthName = uicomponent.getMonthName(currentMonth) ;
  int currentYear = uicomponent.getCurrentYear() ;
  String linkDayNext = uicomponent.event(uicomponent.ACT_NEXT, String.valueOf(Calendar.MONTH)) ;
  String linkDayPrevious = uicomponent.event(uicomponent.ACT_PREVIOUS, String.valueOf(Calendar.MONTH)) ;
  Calendar calendar = uicomponent.getCurrentCalendar() ;
  dateFormat = uicomponent.getDateFormat() ;
  timeFormat = uicomponent.getTimeFormat() ;
  dateTimeFormat = uicomponent.getDateTimeFormat() ;
  WebuiRequestContext context = WebuiRequestContext.getCurrentInstance() ;
  Locale locale = context.getParentAppRequestContext().getLocale() ;
  
  DateFormat df = new SimpleDateFormat(dateFormat, locale) ;
  df.setCalendar(CalendarUtils.getInstanceTempCalendar()) ;
  DateFormat sdf = new  SimpleDateFormat("d", locale) ;
  sdf.setCalendar(CalendarUtils.getInstanceTempCalendar()) ;
  DateFormat sdtf = new  SimpleDateFormat("MMM/dd", locale) ;
  sdtf.setCalendar(CalendarUtils.getInstanceTempCalendar()) ;
  DateFormat tf = new SimpleDateFormat(timeFormat, locale) ;
  tf.setCalendar(CalendarUtils.getInstanceTempCalendar()) ;
  DateFormat dtf = new SimpleDateFormat(dateTimeFormat, locale) ;
  dtf.setCalendar(CalendarUtils.getInstanceTempCalendar()) ;
  DateFormat tempFormat = new  SimpleDateFormat("EEE MMM dd yyyy HH:mm:ss", Locale.ENGLISH) ;
  tempFormat.setCalendar(uicomponent.getInstanceTempCalendar()) ;
  DateFormat wf = new  SimpleDateFormat("EEE", locale) ;
  numberOfDays = 7 ;
  styleWidth = "width:14.2%;*width:14%;" ;
  %>
  <div class="uiMonthView uiBox">
    <div class="title"><% _ctx.include("app:/templates/calendar/webui/UIHeaderBar.gtmpl");%></div>
      <div id="bts_alert" class="alert fade in" style="display: none;">
          <button type="button" id="bts_close" class="close" style="padding-right: 15px;">x</button>
          <strong></strong>
      </div>
    <div class="dayTitleBar">
    <table class="uiGrid table" exocallback="eXo.calendar.UIWeekView.callbackSelectionX();">
      <tr>
      <%
        cl = uicomponent.getBeginDateOfWeek() ;
        t = 0 ; 
        while(t++ <numberOfDays) {
        wf.setCalendar(cl) ;
      %>
      <td class="uiCellBlock" style="$styleWidth">
        <%=wf.format(cl.getTime()).toUpperCase()%>
      </td>
      <%
        cl.add(Calendar.DATE,1) ;
       }
      %>
      </tr>
    </table>    
    </div>  
    
    <div class="eventMonthContainer">
      <div class="eventMonthContent">
        <div class="rowContainerDay" style="position:relative ;" lastUpdatedId="<%=uicomponent.getLastUpdatedEventId()%>">
      <table class="uiGrid table" id="UIMonthViewGrid" cellspacing="0" borderspacing="0" eXoCallback="eXo.calendar.GUIMan.callbackHighlighter() ;">
        <col width="14%"><col width="14%"><col width="14%"><col width="14%"><col width="14%"><col width="14%"><col width="14%">      
        <tbody>

          <%
          temcalendar = uicomponent.getInstanceTempCalendar() ;//uicomponent.getBeginDateOfMonthView() ;
          temcalendar.setTime(uicomponent.getBeginDateOfMonthView().getTime()) ;
          def week = 0 ; 
          table = "" ;
          clazz ="" ;
          dayOfMonth = 1 ;
          validDay = 1 ;
          cssClass = "calendarContentNomal" ;
          daysInMonth = uicomponent.getDaysInMonth() ;
          currentDate = Integer.parseInt(sdf.format(temcalendar.getTime()));
          while (week++ < uicomponent.getWeeksOfTheMonth(currentYear, currentMonth, 1)  ||  (dayOfMonth <= daysInMonth)) {
            println "<tr>";
            dayOfWeek = 0 ;
            while (dayOfWeek++ < 7) {
            if ((week == 1 && currentDate > 8) || (week >= (uicomponent.getWeeksOfTheMonth(currentYear, currentMonth, 1)-1) && currentDate < 8)) {
              validDay = 0;
            } else {
              validDay = 1 ;
            }
            display = "" ;
             dateTime = temcalendar.getTimeInMillis() ;  
            actionUpdate = uicomponent.event('UpdateEvent', dateTime + '&' + uicomponent.EVENTID + '=event&' + uicomponent.CALENDARID + '=cal&' + uicomponent.CALTYPE + '=caltype') ;
            dayActionLink = uicomponent.TYPE_DAY +"&currentTime="+  dateTime ;
            if (validDay) {
              tdClass = "";
              if (uicomponent.isCurrentDay(dayOfMonth, currentMonth, currentYear )) {
              clazz = 'today';
              tdClass = 'tdToday';
              } else if (dayOfWeek == 1 || dayOfWeek == 7) {
              clazz = 'dayBox';
              } else {
              clazz = 'dayBox';
              }
              month = currentMonth + 1 ;
              %>
              <td id="r<%=week%>c<%=dayOfWeek%>" rindex="<%=week%>" cindex="<%=dayOfWeek%>" startTimeFull="<%=tempFormat.format(temcalendar.getTime())%>"  actionLink="$actionUpdate" class="calendarContentNomal uiCellBlock $tdClass" startTime='<%=temcalendar.getTimeInMillis()%>' >
              <div class="dayBox $clazz">
              <a href="<%=uicomponent.event("GotoDate",dayActionLink)%>" onmousedown="event.cancelBubble = true ;">
               <%=sdf.format(temcalendar.getTime())%> 
              </a>
               </div>
               <div class="dayContent"></div>
              </td> 
            <%   
              dayOfMonth++ ;
            } else {
              %>
              <td id="r<%=week%>c<%=dayOfWeek%>" rindex="<%=week%>" cindex="<%=dayOfWeek%>" startTimeFull="<%=tempFormat.format(temcalendar.getTime())%>" actionLink="$actionUpdate" startTime='$dateTime' class="uiCellBlock calendarContentDisable"><div class="disableDay"></div>
              <div class="dayContent"> 
               <a href="<%=uicomponent.event("GotoDate",dayActionLink)%>" onmousedown="event.cancelBubble = true ;">
                <%=sdtf.format(temcalendar.getTime())%>
              </a>
               </div>
               </td>
             <%
            }
            temcalendar.add(Calendar.DATE, 1) ;
            currentDate = Integer.parseInt(sdf.format(temcalendar.getTime()));
            }
            println "</tr>" ;
          }

          %>
        </tbody>
      </table>
      <%
          
          startMonh =  uicomponent.getBeginDateOfMonth() ;
          endMonth =  uicomponent.getEndDateOfMonth() ;          
          //eventList = uicomponent.getDataMap().values() ;
          eventList = uicomponent.getEventData();
          for(event in eventList){
          startTime = event.fromDateTime.getTime() ;
          endTime = event.toDateTime.getTime() ;
          startIndex = 0;
          endIndex = uicomponent.getCurrentCalendar().getMaximum(Calendar.WEEK_OF_MONTH) ;
          if(event.fromDateTime.after(startMonh.getTime()) || event.fromDateTime.equals(startMonh.getTime())) {
            Calendar cal = CalendarUtils.getInstanceTempCalendar() ;
            cal.setTime(event.fromDateTime) ;
            startIndex = cal.get(Calendar.WEEK_OF_MONTH) ;
          }
          color = uicomponent.getColors().get(event.calendarId) ;
          moveAction = uicomponent.url("MoveEvent",event.getId());
          Boolean isOccur = (!CalendarEvent.RP_NOREPEAT.equals(event.getRepeatType()) && (event.getIsExceptionOccurrence() == null || !event.getIsExceptionOccurrence()))?true:false;
          String recurId = event.getRecurrenceId();
          def isEditable;
          def username = CalendarUtils.getCurrentUser();
        	 def calType = CalendarUtils.getCalendarService().getTypeOfCalendar(username, event.getCalendarId());
          if (calType != CalendarUtils.PRIVATE_TYPE) isEditable = uicomponent.isEventEditable(event);
          else isEditable = "true";
          %>
          
          <div class="dayContentContainer eventBoxes" tartIndex="$startIndex" calType="$calType" eventId="$event.id" calId="$event.calendarId" eventCat="$event.eventCategoryId" 
          startTimeFull="<%=tempFormat.format(event.getFromDateTime())%>" endTimeFull="<%=tempFormat.format(event.getToDateTime())%>"
          startTime="$startTime" endTime="$endTime" moveAction="$moveAction" isOccur="$isOccur" recurId="$recurId" style="display:none;" isEditable="$isEditable">
            <div class="eventOnDayBorder $color">
              <div class="clearfix">          
          <div class="eventOnDayContent">
            <div class="pull-left eventCheckbox $color">
            <%uicomponent.renderField(uicomponent.getChildById(uicomponent.getCheckboxId(event)))%>
            </div>            
            <div class="eventSummary">
            <%if(CalendarEvent.TYPE_TASK.equals(event.getEventType())){%>
              <i class="uiIconCalTaskMini"></i>
            <%} else {%>
              <i class="uiIconCalClockMini"></i>
              <%if(isOccur){%>
                  <i class="uiIconCalRecurring"></i>
              <%} else if(!isOccur && event.getIsExceptionOccurrence()){%>
                  <i class="uiIconCalEditRecurring"></i>
              <%}%>
            <%}%>
            <i class="uiIconCal<%=event.getPriority()%>Priority"></i>
            <%if(CalendarEvent.TYPE_TASK.equals(event.getEventType()) && event.eventState.equals(CalendarEvent.COMPLETED)){%>
              <span style="text-decoration:line-through;">
              <%} else {%>
              <span>
              <%}%>
                <%=StringEscapeUtils.escapeHtml(event.summary)%>
              </span>
            </div>
           
          </div>
              
              </div>
            </div>
          </div>
          <%
          }
          %>  
          
    </div>
      </div>
    </div>
  </div>
<%uiform.end();%>

  <% /*Begin Popup Menu*/ %>
  
    <div class="uiRightClickPopupMenu dropdown-menu uiDropdownWithIcon" id="UIMonthViewRightMenu" eXoCallback="eXo.calendar.UICalendarPortlet.monthViewCallback">
      <ul class="uiDropDownCal" style="display:block;">
   
        <li>
         <a class="createEvent" href="#">
           <i class="uiIconCalCreateEvent"></i>
           <%=_ctx.appRes("ContextMenu.label.addEvent")%>
         </a>
        </li>
    </ul>
    </div>

<% /*End Popup Menu*/ %>
  
<% /*Begin Popup Menu - Calendar Actions */ %>
<div class="uiRightClickPopupMenu dropdown-menu uiDropdownWithIcon" id="UIMonthViewEventRightMenu" exocallback="eXo.calendar.UICalendarPortlet.monthViewCallback" style="display: none ;" >
<ul class="uiDropDownCal" style="display:block;">
  <li>
      <a class="eventAction" href="<%= uicomponent.event("View",uicomponent.id,"id&$uicomponent.CALENDARID=calId&calType=caltype&isOccur=isOccur&recurId=recurId") ; %>">
        <i class="uiIconPreview uiIconLightGray"></i>
        <%=_ctx.appRes("ContextMenu.label.View")%>
      </a>
  </li>
  <li>
      <a class="eventAction" href="<%= uicomponent.event("Edit",uicomponent.id,"id&$uicomponent.CALENDARID=calId&calType=caltype&isOccur=isOccur&recurId=recurId") ; %>">
        <i class="uiIconEdit uiIconLightGray"></i>
        <%=_ctx.appRes("ContextMenu.label.Edit")%>
      </a>
  </li>
  <li>
      <a class="eventAction" href="<%= uicomponent.event("Delete",uicomponent.id,"id&$uicomponent.CALENDARID=calId&calType=caltype&isOccur=isOccur&recurId=recurId") ; %>"
                            deleteActionLink="<%=uicomponent.event("DeleteEvent",uicomponent.id,"id")%>">
        <i class="uiIconDelete uiIconLightGray"></i>
        <%=_ctx.appRes("ContextMenu.label.Delete")%>
      </a>
  </li>
  <li>
      <a class="eventAction" href="<%=uicomponent.event("ExportEvent","id&$uicomponent.CALENDARID=calId&$uicomponent.CALTYPE=caltype")%>">
        <i class="uiIconCalExportCalendar uiIconLightGray"></i>
        <%=_ctx.appRes("ContextMenu.label.ExportEvent")%>
      </a>
    </li>

</ul>
</div>

<% /*End Popup Menu*/ %>



      
